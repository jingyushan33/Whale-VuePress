{"remainingRequest":"E:\\VuePress\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VuePress\\node_modules\\vuepress-theme-maker\\components\\NavLinks.vue?vue&type=style&index=0&id=f7542c92&lang=stylus&","dependencies":[{"path":"E:\\VuePress\\node_modules\\vuepress-theme-maker\\components\\NavLinks.vue","mtime":1663145799834},{"path":"E:\\VuePress\\node_modules\\css-loader\\dist\\cjs.js","mtime":1662712189756},{"path":"E:\\VuePress\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662712190347},{"path":"E:\\VuePress\\node_modules\\postcss-loader\\src\\index.js","mtime":1662712190033},{"path":"E:\\VuePress\\node_modules\\stylus-loader\\index.js","mtime":1662712193938},{"path":"E:\\VuePress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662712189328},{"path":"E:\\VuePress\\node_modules\\vue-loader\\lib\\index.js","mtime":1662712190347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5uYXYtbGlua3MKICBkaXNwbGF5IGlubGluZS1ibG9jawogIGEKICAgIGxpbmUtaGVpZ2h0IDEuNHJlbQogICAgY29sb3IgaW5oZXJpdAogICAgJjpob3ZlciwgJi5yb3V0ZXItbGluay1hY3RpdmUKICAgICAgY29sb3IgdmFyKC0tdGhlbWUtYWNjZW50LWNvbG9yKQogIC5uYXYtaXRlbQogICAgcG9zaXRpb24gcmVsYXRpdmUKICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrCiAgICBtYXJnaW4tbGVmdCAxLjVyZW0KICAgIGxpbmUtaGVpZ2h0IDJyZW0KICAgICY6Zmlyc3QtY2hpbGQKICAgICAgbWFyZ2luLWxlZnQgMAogIC5yZXBvLWxpbmsKICAgIG1hcmdpbi1sZWZ0IDEuNXJlbQpAbWVkaWEgKG1heC13aWR0aDogJE1RTW9iaWxlKQogIC5uYXYtbGlua3MKICAgIC5uYXYtaXRlbSwgLnJlcG8tbGluawogICAgICBtYXJnaW4tbGVmdCAwCkBtZWRpYSAobWluLXdpZHRoOiAkTVFNb2JpbGUpCiAgLm5hdi1saW5rcyBhCiAgICAmOmhvdmVyLCAmLnJvdXRlci1saW5rLWFjdGl2ZQogICAgICBjb2xvciB2YXIoLS10aGVtZS1mb3JlZ3JvdW5kLWNvbG9yKQogIC5uYXYtaXRlbSA+IGE6bm90KC5leHRlcm5hbCkKICAgICY6aG92ZXIsICYucm91dGVyLWxpbmstYWN0aXZlCiAgICAgIG1hcmdpbi1ib3R0b20gLTJweAo="},{"version":3,"sources":["NavLinks.vue"],"names":[],"mappings":";AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NavLinks.vue","sourceRoot":"node_modules/vuepress-theme-maker/components","sourcesContent":["<template>\n  <nav\n    v-if=\"userLinks.length || repoLink\"\n    class=\"nav-links\"\n  >\n    <!-- user links -->\n    <div\n      v-for=\"item in userLinks\"\n      :key=\"item.link\"\n      class=\"nav-item\"\n    >\n      <DropdownLink\n        v-if=\"item.type === 'links'\"\n        :item=\"item\"\n      />\n      <NavLink\n        v-else\n        :item=\"item\"\n      />\n    </div>\n\n    <!-- repo link -->\n    <a\n      v-if=\"repoLink\"\n      :href=\"repoLink\"\n      class=\"repo-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {{ repoLabel }}\n      <OutboundLink />\n    </a>\n  </nav>\n</template>\n\n<script>\nimport DropdownLink from '@theme/components/DropdownLink.vue'\nimport { resolveNavLinkItem } from '../util'\nimport NavLink from '@theme/components/NavLink.vue'\nexport default {\n  name: 'NavLinks',\n  components: {\n    NavLink,\n    DropdownLink\n  },\n  computed: {\n    userNav () {\n      return this.$themeLocaleConfig.nav || this.$site.themeConfig.nav || []\n    },\n    nav () {\n      const { locales } = this.$site\n      if (locales && Object.keys(locales).length > 1) {\n        const currentLink = this.$page.path\n        const routes = this.$router.options.routes\n        const themeLocales = this.$site.themeConfig.locales || {}\n        const languageDropdown = {\n          text: this.$themeLocaleConfig.selectText || 'Languages',\n          ariaLabel: this.$themeLocaleConfig.ariaLabel || 'Select language',\n          items: Object.keys(locales).map(path => {\n            const locale = locales[path]\n            const text = themeLocales[path] && themeLocales[path].label || locale.lang\n            let link\n            // Stay on the current page\n            if (locale.lang === this.$lang) {\n              link = currentLink\n            } else {\n              // Try to stay on the same page\n              link = currentLink.replace(this.$localeConfig.path, path)\n              // fallback to homepage\n              if (!routes.some(route => route.path === link)) {\n                link = path\n              }\n            }\n            return { text, link }\n          })\n        }\n        return [...this.userNav, languageDropdown]\n      }\n      return this.userNav\n    },\n    userLinks () {\n      return (this.nav || []).map(link => {\n        return Object.assign(resolveNavLinkItem(link), {\n          items: (link.items || []).map(resolveNavLinkItem)\n        })\n      })\n    },\n    repoLink () {\n      const { repo } = this.$site.themeConfig\n      if (repo) {\n        return /^https?:/.test(repo)\n          ? repo\n          : `https://github.com/${repo}`\n      }\n      return null\n    },\n    repoLabel () {\n      if (!this.repoLink) return\n      if (this.$site.themeConfig.repoLabel) {\n        return this.$site.themeConfig.repoLabel\n      }\n      const repoHost = this.repoLink.match(/^https?:\\/\\/[^/]+/)[0]\n      const platforms = ['GitHub', 'GitLab', 'Bitbucket']\n      for (let i = 0; i < platforms.length; i++) {\n        const platform = platforms[i]\n        if (new RegExp(platform, 'i').test(repoHost)) {\n          return platform\n        }\n      }\n      return 'Source'\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.nav-links\n  display inline-block\n  a\n    line-height 1.4rem\n    color inherit\n    &:hover, &.router-link-active\n      color var(--theme-accent-color)\n  .nav-item\n    position relative\n    display inline-block\n    margin-left 1.5rem\n    line-height 2rem\n    &:first-child\n      margin-left 0\n  .repo-link\n    margin-left 1.5rem\n@media (max-width: $MQMobile)\n  .nav-links\n    .nav-item, .repo-link\n      margin-left 0\n@media (min-width: $MQMobile)\n  .nav-links a\n    &:hover, &.router-link-active\n      color var(--theme-foreground-color)\n  .nav-item > a:not(.external)\n    &:hover, &.router-link-active\n      margin-bottom -2px\n</style>"]}]}