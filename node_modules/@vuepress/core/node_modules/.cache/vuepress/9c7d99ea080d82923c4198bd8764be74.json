{"remainingRequest":"E:\\VuePress\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VuePress\\node_modules\\vuepress-theme-maker\\components\\PostMeta.vue?vue&type=style&index=0&id=48960eb4&lang=stylus&","dependencies":[{"path":"E:\\VuePress\\node_modules\\vuepress-theme-maker\\components\\PostMeta.vue","mtime":1663145799834},{"path":"E:\\VuePress\\node_modules\\css-loader\\dist\\cjs.js","mtime":1662712189756},{"path":"E:\\VuePress\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662712190347},{"path":"E:\\VuePress\\node_modules\\postcss-loader\\src\\index.js","mtime":1662712190033},{"path":"E:\\VuePress\\node_modules\\stylus-loader\\index.js","mtime":1662712193938},{"path":"E:\\VuePress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662712189328},{"path":"E:\\VuePress\\node_modules\\vue-loader\\lib\\index.js","mtime":1662712190347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wb3N0LW1ldGEKICBkaXNwbGF5IGZsZXgKICBhbGlnbi1pdGVtcyBjZW50ZXIKICBsaW5lLWhlaWdodCAyCiAgZmxleC13cmFwIHdyYXAKICA+IGRpdgogICAgZGlzcGxheSBpbmxpbmUtZmxleAogICAgYWxpZ24taXRlbXMgY2VudGVyCiAgICBmb250LXNpemUgMTRweAogICAgbWFyZ2luLXJpZ2h0IDFyZW0KICAgIHdoaXRlLXNwYWNlIG5vd3JhcAogICAgaGVpZ2h0IDJlbQogIGkKICAgIG1hcmdpbi1yaWdodCAwLjRyZW0KICAgICY6YmVmb3JlCiAgICAgIHZlcnRpY2FsLWFsaWduIDNweAogIHN2ZwogICAgbWFyZ2luLXJpZ2h0IDVweAogICAgd2lkdGggMTRweAogICAgaGVpZ2h0IDE0cHgKLnBvc3QtbWV0YS0taGFzQ292ZXIKICBhCiAgICBsaW5lLWhlaWdodCAxLjIKICAgICY6bGluaywgJjp2aXNpdGVkCiAgICAgIGNvbG9yICNmZmZmZmYKICAgICAgYm9yZGVyLXRvcCBkb3R0ZWQgMXB4IHRyYW5zcGFyZW50CiAgICAgIGJvcmRlci1ib3R0b20gZG90dGVkIDFweCB0cmFuc3BhcmVudAogICAgJjpob3ZlcgogICAgICBib3JkZXItYm90dG9tLWNvbG9yICNmZmZmZmYK"},{"version":3,"sources":["PostMeta.vue"],"names":[],"mappings":";AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostMeta.vue","sourceRoot":"node_modules/vuepress-theme-maker/components","sourcesContent":["<template>\n  <div class=\"post-meta\">\n    <div\n      v-if=\"author\"\n      class=\"post-meta-author\"\n      itemprop=\"publisher author\"\n      itemtype=\"http://schema.org/Person\"\n      itemscope\n    >\n      <i class=\"icon-author\"></i> \n      <span itemprop=\"name\">{{ author }}</span>\n      <span v-if=\"location\" itemprop=\"address\"> &nbsp; in {{ location }}</span>\n    </div>\n    <div v-if=\"date\" class=\"post-meta__date\">\n      <i class=\"icon-calendar\"></i> \n      <time pubdate itemprop=\"datePublished\" :datetime=\"date\">\n        {{ resolvedDate }}\n      </time>\n    </div>\n    <div class=\"post-meta__cates\" v-for=\"item in resolvedCates\" :key=\"item.name\">\n      <i class=\"icon-cate\"></i>\n      <router-link :to=\"item.path\">\n        {{ item.name}}\n      </router-link>\n    </div>\n    <div class=\"post-meta__reading\">\n      <i class=\"icon-time\"></i>\n      {{$page.wordCount}} words in {{$page.readingTime}} min\n    </div>\n    <div :id=\"pagePath\" v-if=\"isShowReadCount\" class=\"leancloud_visitors\" data-flag-title=\"Your Article Title\">\n        <i class=\"icon-eye\"></i>\n        <i class=\"leancloud-visitors-count\">--</i>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dayjs from 'dayjs'\nimport dayjsPluginUTC from 'dayjs/plugin/utc'\n\ndayjs.extend(dayjsPluginUTC)\n\nexport default {\n  name: 'PostMeta',\n  props: {\n    author: {\n      type: String,\n    },\n    date: {\n      type: String,\n    },\n    location: {\n      type: String,\n    },\n    cates: {\n      type: [Array, String],\n      default: () => {\n        return []\n      }\n    }\n  },\n  data() {\n    return {\n      pagePath: ''\n    }\n  },\n  computed: {\n    isShowReadCount() {\n      let isShow = false;\n      try {\n        isShow = this.$themeConfig.blog.comment.visitor;\n      } catch (error) {\n        console.log(error);\n      }\n      return isShow;\n    },\n    resolvedDate() {\n      return dayjs\n        .utc(this.date)\n        .format(this.$themeConfig.dateFormat)\n    },\n    resolvedCates() {\n      let res = [];\n      let cates;\n      if (!Array.isArray(this.cates)) {\n        cates = [this.cates]; \n      }\n      res = this.$category.list.filter(item => {\n        return this.cates.includes(item.name);\n      })\n      return res;\n    }\n  },\n  mounted() {\n    this.pagePath = window.location.pathname;\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n.post-meta\n  display flex\n  align-items center\n  line-height 2\n  flex-wrap wrap\n  > div\n    display inline-flex\n    align-items center\n    font-size 14px\n    margin-right 1rem\n    white-space nowrap\n    height 2em\n  i\n    margin-right 0.4rem\n    &:before\n      vertical-align 3px\n  svg\n    margin-right 5px\n    width 14px\n    height 14px\n.post-meta--hasCover\n  a\n    line-height 1.2\n    &:link, &:visited\n      color #ffffff\n      border-top dotted 1px transparent\n      border-bottom dotted 1px transparent\n    &:hover\n      border-bottom-color #ffffff\n</style>\n"]}]}